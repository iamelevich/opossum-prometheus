name: Lint and Test
on: [pull_request, workflow_dispatch]
jobs:
  test:
    strategy:
      matrix:
        version: [14, 16, 18]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-${{ matrix.version }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.version }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Test and Coverage
        run: pnpm run test:coverage

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report-${{ matrix.version }}
          path: ./coverage/coverage-summary.json

  coverage_badge:
    runs-on: ubuntu-latest
    needs: test
    name: Coverage badge
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - name: Download code coverage results
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report-18

      - name: Get Values
        id: get-values
        shell: bash
        run: |
          COV=$(node -p 't=require(`./coverage-summary.json`).total,Math.min(...`lines|statements|functions|branches`.split(`|`).map(k=>t[k].pct))')
          echo "coverage=$COV" >> $GITHUB_OUTPUT

      - name: Checkout gh-pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages

      - name: Create Badges
        shell: bash
        run: |
          export COV=${{ steps.get-values.outputs.coverage }}
          COLOR=$(node -p '+process.env.COV >= 95 ? `green` : `orange`')
          mkdir -p badges
          npx badgen-cli -j coverage -s $COV% -c $COLOR > badges/coverage.svg

      - name: Deploy Badges
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Update badges [skip ci]'
          branch: gh-pages
          skip_fetch: true
          skip_checkout: true

      # Without this, will get Error:
      # Can't find 'action.yml', 'action.yaml' or 'Dockerfile' under '/home/runner/work/coverage-badge-action/coverage-badge-action/action.yml'.
      # Did you forget to run actions/checkout before running your local action?
      - name: Checkout Back
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

  codecov:
    runs-on: ubuntu-latest
    needs: test
    name: Upload to codecov.io
    steps:
      - name: Download code coverage results
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report-18

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage-summary.json

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-18-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-18-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm run lint
